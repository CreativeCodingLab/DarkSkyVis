{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sdf",
				"sdfPosition"
			],
			[
				"sdfGet",
				"sdfGetAcceleration"
			],
			[
				"setM",
				"setMinMaxRange"
			],
			[
				"vtkStr",
				"vtkStructuredGrid"
			],
			[
				"initS",
				"initStreamlines	function"
			],
			[
				"init",
				"initHedgeHog"
			],
			[
				"sdfP",
				"sdfPhi	statement"
			],
			[
				"fi",
				"filename	statement"
			],
			[
				"Parti",
				"particle_index"
			],
			[
				"for",
				"forin	for … in … done"
			],
			[
				"except",
				"Exception	class"
			],
			[
				"rand",
				"random	statement"
			],
			[
				"Get",
				"GetPointData"
			],
			[
				"__m",
				"__setMapper	function"
			],
			[
				"get",
				"getPartitions	function"
			],
			[
				"gmaen",
				"gmean"
			],
			[
				"fo",
				"following"
			],
			[
				"sub",
				"Subvolume"
			],
			[
				"process",
				"processess"
			],
			[
				"try",
				"try	Try/Except"
			],
			[
				"Sca",
				"SCALA_HOME"
			],
			[
				"scalar",
				"scalar_range	statement"
			],
			[
				"nL",
				"nLon	param"
			],
			[
				"data",
				"data_at_comp_pos"
			],
			[
				"NetCDF",
				"netCDF4"
			],
			[
				"outline",
				"outlineActor"
			],
			[
				"text",
				"textShape	statement"
			],
			[
				"Ky",
				"Kyle_MPRAGE"
			],
			[
				"lat",
				"latitude"
			],
			[
				"long",
				"longitude"
			],
			[
				"Adj",
				"AdjMatrix"
			],
			[
				"la",
				"layerGroups"
			],
			[
				"layerGrou",
				"layerGroupName"
			],
			[
				"proto",
				"prototype"
			],
			[
				"start",
				"startCity"
			],
			[
				"brea",
				"breadthFirstSearch"
			],
			[
				"ve",
				"vertex"
			],
			[
				"num",
				"numNodes"
			],
			[
				"lev",
				"Level"
			],
			[
				"level",
				"printLevelSpacingStart"
			],
			[
				"heap",
				"heaplvl5"
			],
			[
				"hea",
				"heaplvl5"
			],
			[
				"cur",
				"curLvl"
			],
			[
				"Clou",
				"Cloud-Rain"
			],
			[
				"cit",
				"cityName"
			],
			[
				"elas",
				"elapsedArray"
			],
			[
				"clac",
				"calculateTimeNode"
			],
			[
				"ela",
				"elapsedNode"
			],
			[
				"qu",
				"quantity"
			],
			[
				"quan",
				"quantities"
			],
			[
				"cla",
				"calculateTimeArray"
			],
			[
				"inser",
				"insertNode"
			],
			[
				"star",
				"startTime"
			],
			[
				"clock",
				"clock_t"
			],
			[
				"begin",
				"beginTime"
			],
			[
				"time",
				"time_t"
			],
			[
				"p",
				"pNodes"
			],
			[
				"tre",
				"treeNode"
			],
			[
				"con",
				"console"
			],
			[
				"comm",
				"community"
			],
			[
				"F",
				"FarNorthSide"
			],
			[
				"if",
				"ife	if … else"
			],
			[
				"Sout",
				"SouthSide"
			],
			[
				"West",
				"WestSide"
			],
			[
				"read",
				"readlines	function"
			],
			[
				"po",
				"position"
			],
			[
				"poin",
				"pointLight"
			],
			[
				"Po",
				"pointLight"
			],
			[
				"sp",
				"sphereMaterial"
			],
			[
				"base",
				"buildDataset"
			],
			[
				"Freq",
				"FreqDist"
			],
			[
				"pre",
				"preprocessing"
			],
			[
				"classif",
				"classification"
			],
			[
				"constru",
				"constructFeatureIndex"
			],
			[
				"filt",
				"filterFeatureFrequency"
			],
			[
				"feature",
				"featureDist"
			],
			[
				"token",
				"tokenNegation"
			],
			[
				"twi",
				"twokenizer"
			],
			[
				"emoji",
				"emojiRE"
			],
			[
				"class",
				"class	class"
			],
			[
				"cc",
				"cc	shortcut - case class"
			],
			[
				"case",
				"case	case"
			],
			[
				"useCl",
				"useCluster4"
			],
			[
				"def",
				"define"
			],
			[
				"pr",
				"prn-str"
			],
			[
				"prn",
				"prn-str"
			],
			[
				"stim",
				"stimListPath"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import vtk\nimport time\nimport numpy as np\nimport sdfpy as sdf\nfrom glob import glob\nimport thingking as tk  # loadtxt\nfrom itertools import imap\nfrom utils.vtkDarkSkyUtilities import Halo, SDFLoader, l2a\n\n\ndef gatherHalos(fileList, ID, coords, n):\n    \"\"\"\n    The name is silly, but the role it serves in not\n\n    Recursive Halo tracker which follows the parent/descendant id of a Halo\n    across a set of Halo-Files/Time Points.\n\n    Returns a set of coordinates of a Halo's position over time\n    \"\"\"\n    print len(fileList), ID, len(coords), n\n    if len(fileList) == 0:\n        print \"file is empty\"\n        return coords, n\n    fn = fileList[0]\n    halos = l2a([Halo(x) for x in tk.loadtxt(fn)])\n    ids = l2a([x.id for x in halos])\n    if ID is None:\n        print ID, \"is None\"\n        ID = ids[0]\n    index = (ids == ID).nonzero()[0][0]\n    if index < 0 or index is []:\n        print \"its -1!\"\n        return coords, n\n    elif index > -1:\n        tHl = halos[index]\n        # print details\n        print index, fn, tHl.id, tHl.desc_id, tHl.pid, n\n        xyzR = [tHl.x, tHl.y, tHl.z, tHl.rvir]\n        # mrs = tHl.mvir, tHl.rvir, tHl.rs   # halo mass, radius, & scale radius\n        coords.append(xyzR)\n        return intoTheVoid(fileList[1:], tHl.desc_id, coords, n+1)\n\n\ndef filter_sphere(pos, center, radius, domain_width):\n    pass\n\n\n\ndef main():\n    PATds = \"../data/ds14_scivis_0128/ds14_scivis_0128_e4_dt04_[01].[0-9][0-9]00\"\n    PATrs = \"../data/rockstar/hlists/hlist_[01].[0-9][0-9]*.list\"\n    dsLoader = SDFLoader(True)  # Yes, convert to comoving\n\n    dsFiles = glob(PATds)[10:]  # Skip the first 10 since we dont have halos to match\n    rsFiles = glob(PATrs)\n\n    hID = 257.\n    coords, n = gatherHalos(rsFiles, hID, [], 0)\n\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n'''\n# What am I trying to do?\n1) Identify a halo at time-0\n    a) get its xyz coords\n    b) get its mass\n    c) get its radius\n    d) get its child-id\n\n2) Identify particles which surround Identified Halo at time-0\n    a) Filter particles that do not fall within the radius of the halo\n    b) get their xyz coords\n    c) get their id\n    d) get their phi (gravitational potential) scalar\n    e) get their uvw coords\n    f) get their acceleration vector\n    f) compute their uvw magnitude\n\n\n'''\n\n    def __toCoMoving(self, proper):\n        h_100 = self.sdfHeader['h_100']\n        width = self.sdfHeader['L0']\n        cosmo_a = self.sdfHeader['a']\n        kpc_to_Mpc = 1./1000\n        return (proper + width/2.) * h_100 * kpc_to_Mpc / cosmo_a\n\n    def __shift_periodic(pos, left, right, domain_width):\n        \"\"\"\n        Periodically shift positions that are right of left+domain_width to\n        the left, and those left of right-domain_width to the right.\n        \"\"\"\n        for i in range(3):\n            mask = pos[:,i] >= left[i] + domain_width[i]\n            pos[mask, i] -= domain_width[i]\n            mask = pos[:,i] < right[i] - domain_width[i]\n            pos[mask, i] += domain_width[i]\n        return\n\n    def filter_sphere(self, center, radius, myiter):\n        \"\"\"\n        Filter data by masking out data outside of a sphere defined\n        by a center and radius. Account for periodicity of data, allowing\n        left/right to be outside of the domain.\n        \"\"\"\n\n        # Get left/right for periodicity considerations\n        left = center - radius\n        right = center + radius\n        for data in myiter:\n            pos = np.array([data['x'].copy(), data['y'].copy(), data['z'].copy()]).T\n\n            DW = self.true_domain_width\n            _shift_periodic(pos, left, right, DW)\n\n            # Now get all particles that are within the sphere\n            mask = ((pos-center)**2).sum(axis=1)**0.5 < radius\n\n            sdflog.debug(\"Filtering particles, returning %i out of %i\" % (mask.sum(), mask.shape[0]))\n\n            if not np.any(mask):\n                continue\n\n            filtered = {ax: pos[:, i][mask] for i, ax in enumerate('xyz')}\n            for f in data.keys():\n                if f in 'xyz':\n                    continue\n                filtered[f] = data[f][mask]\n\n            yield filtered\n\n",
			"file": "darksky/vtkExtractHaloContents.py",
			"file_size": 4118,
			"file_write_time": 130772483460000000,
			"settings":
			{
				"buffer_size": 4126,
				"line_ending": "Unix"
			}
		},
		{
			"file": "darksky/utils/vtkDarkSkyUtilities.py",
			"settings":
			{
				"buffer_size": 11471,
				"line_ending": "Unix"
			}
		},
		{
			"file": "darksky/vtkDarkSkyTime.py",
			"settings":
			{
				"buffer_size": 10678,
				"line_ending": "Unix"
			}
		},
		{
			"file": "darksky/vtkDarkSkyParticles.py",
			"settings":
			{
				"buffer_size": 11338,
				"line_ending": "Unix"
			}
		},
		{
			"contents": " Provide a 100-200 word description of your research and how the image you are \n submitting provides visual documentation of your overall work at UIC. This \n description must include, but is not limited to, an explanation of how the \n image relates to your research. You may also include such information as what \n the image represents (if it is not immediately apparent), and where and/or how \n the image was created.  \n\n\nCosmological simulations are a cornerstone of our understanding of the Universe \nduring its 13.7 billion year progression from small fluctuations that we see in \nthe cosmic microwave background to today, where we are surrounded by galaxies \nand clusters of galaxies interconnected by a vast cosmic web.\n\nSimulations of the formation of structure in the Universe typically simulate \ndark matter, a collisionless fluid, as a discretized set of particles that \ninteract only gravitationally\n\n\nThis is an exploration of the Time-Space Cube using the Dark Sky particle data. \nIn this instance, between 10 and 20 timesteps were sampled around a range of \nbounds to represent the expansion of the universe. Time Layers are colored using \nJET values, with Hot colors representing the latest point in time, while cool \ncolors represent early points in time.\n\n\nThis series provides a more complete picture of how the Universe expands overtime. \nHot colors represent the 'end' of the structural-temporal expansion while the \ncool colors represent the earlier points in time.\n\n\nHowever, this was only a single point in time. The last point in time to be \nprecise. While the visualization is interesting on its own, what we would really \nlike to see is how it changes across time. \n\nHowever, rather the perform a 2D composition of a single plane, we wanted to see \nit in 3D. To do that we composed an expanding bounding box Space-Time Cube of \nSpace and Time...\n\nWe found that there was a approximately ~454.174*/mpc expansion in terms of the \ndimensional bounds of each time point. In other words, the Universe was expanding \nat a rate of about ~454.174*/Mpc in all directions. \n\nOur approach then was to extract a subset of each time step with an expanding \nboundary box which begins at the boundary of the previous time point, and \nextended to the boundary of the current time point. \n\nThis required iterating over each ds14_scivis_0128_e4_dt04_[01].[0-9][0-9]00 \nfile, 100 in total, and extracting on the order of several millions of particles. \nThis is where MPI and BlueWaters comes in handy. \n\nBy distributing each file and desired bounds to a separate process, we could extract only those point coordinates that we were interested in, in parallel, speeding up the processes significantly. Since the coordinates all fell within unique ranges, the order in which we received them is unimportant.\n\n\n\nThe submitted image explores the expansion of both space and time by aggregating\nlayers of \n\nThe submitted image consists of an aggregated sub-sampling of 20 out \nof the 100 points, sampling every 5th point in time (Or every 5th dataset). This\ntechnique was \n\nThe rate of expansion is consistent across all time points and all dimensions, \nthus for each sample, a 'band' is extracted ",
			"settings":
			{
				"buffer_size": 3199,
				"line_ending": "Unix",
				"name": "Provide a 100-200 word description of your resear"
			}
		},
		{
			"contents": "def _shift_periodic(pos, left, right, domain_width):\n    \"\"\"\n    Periodically shift positions that are right of left+domain_width to\n    the left, and those left of right-domain_width to the right.\n    \"\"\"\n    for i in range(3):\n        mask = pos[:,i] >= left[i] + domain_width[i]\n        pos[mask, i] -= domain_width[i]\n        mask = pos[:,i] < right[i] - domain_width[i]\n        pos[mask, i] += domain_width[i]\n    return\n    \ndef filter_sphere(self, center, radius, myiter):\n    \"\"\"\n    Filter data by masking out data outside of a sphere defined\n    by a center and radius. Account for periodicity of data, allowing\n    left/right to be outside of the domain.\n    \"\"\"\n\n    # Get left/right for periodicity considerations\n    left = center - radius\n    right = center + radius\n    for data in myiter:\n        pos = np.array([data['x'].copy(), data['y'].copy(), data['z'].copy()]).T\n\n        DW = self.true_domain_width\n        _shift_periodic(pos, left, right, DW)\n\n        # Now get all particles that are within the sphere \n        mask = ((pos-center)**2).sum(axis=1)**0.5 < radius\n\n        sdflog.debug(\"Filtering particles, returning %i out of %i\" % (mask.sum(), mask.shape[0]))\n\n        if not np.any(mask):\n            continue\n\n        filtered = {ax: pos[:, i][mask] for i, ax in enumerate('xyz')}\n        for f in data.keys():\n            if f in 'xyz':\n                continue\n            filtered[f] = data[f][mask]\n\n        yield filtered\n",
			"settings":
			{
				"buffer_size": 1458,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "A View Through Space and Time of a Dark Sky\n\nMy research involves the visualization of large scale, multi-variate time-dependent scientific data. The submitted work involves the visualization of a large scale cosmological simulation illustrating the expansion and formation of galaxies and other cosmological structures within the known Universe. Cosmological simulations such as this one make up the core of our understanding of the known Universe and are an integral part of astrophysicist's ability to model those observable phenomena. \nThe dataset in question consists of 100 time-points, each consisting of over 2 million data points representing \"Dark Matter\" particles.\n\nThis visualization offers a view into the global expansion over time of the simulation, highlighting the formation of cosmological structures as well as illustrating the size and scale of the data itself.  The image consists of a aggregated sub-sampling of 20 out of the 100 points, sampling every 5th point in time (Or every 5th dataset) in order to visualize discreet steps in time. Color was used to clearly highlight those temporal differences, with warm colors representing later epochs and cool colors representing earlier epochs. Because the rate of expansion between each time point is consistent, a 'band' was extracted from each dimension of the sampled dataset and overlaid atop the previous sample, thereby encapsulating one within the next. Ultimately, this image represents one of many stepping stones towards effectively visualizing data of this scale and complexity.",
			"settings":
			{
				"buffer_size": 1560,
				"line_ending": "Unix",
				"name": "A View Through Space and Time of a Dark Sky"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 339.0,
		"last_filter": "py",
		"selected_items":
		[
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"py	",
				"Set Syntax: Python"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"te",
				"Set Syntax: LaTeX"
			],
			[
				"tex",
				"Set Syntax: LaTeX"
			],
			[
				"bas",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"lint",
				"Anaconda: Next lint error"
			],
			[
				"ba",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"p",
				"Set Syntax: Python"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"lat",
				"Set Syntax: LaTeX"
			],
			[
				"syc++",
				"Set Syntax: C++"
			],
			[
				"syp",
				"Set Syntax: Python"
			],
			[
				"",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"ana",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"anacon lin",
				"Anaconda: Next lint error"
			],
			[
				"late",
				"Set Syntax: LaTeX"
			],
			[
				"snip",
				"Snippet: Sub Sub Section"
			],
			[
				"md",
				"Set Syntax: Markdown"
			],
			[
				"anaconda disable",
				"Anaconda: Disable linting on this file"
			],
			[
				"anaconda d",
				"Anaconda: Disable linting on this file"
			],
			[
				"dis",
				"Anaconda: Disable linting on this file"
			],
			[
				"disabl",
				"Anaconda: Disable linting on this file"
			],
			[
				"ANAconda: li",
				"Anaconda: Disable linting on this file"
			],
			[
				"mar",
				"Set Syntax: MultiMarkdown"
			],
			[
				"PY",
				"Set Syntax: Python"
			],
			[
				"cm",
				"Set Syntax: CMake"
			],
			[
				"c",
				"Set Syntax: C++"
			],
			[
				"htm",
				"Set Syntax: HTML"
			],
			[
				"html",
				"Set Syntax: HTML (Rails)"
			],
			[
				"F",
				"Format Code"
			],
			[
				"for",
				"Format Code"
			],
			[
				"f",
				"Format Code"
			],
			[
				"form",
				"Format Code"
			],
			[
				"js",
				"Set Syntax: JSON"
			],
			[
				"code",
				"Format Code"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"For",
				"Format Code"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"packare",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"JSO",
				"Set Syntax: JSON"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"snipp",
				"Snippet: Tabular"
			],
			[
				"snippet",
				"Snippet: Chapter"
			],
			[
				"sca",
				"Set Syntax: Scala Improved"
			],
			[
				"scala",
				"Set Syntax: Scala"
			],
			[
				"hask",
				"Set Syntax: Haskell"
			],
			[
				"scal",
				"Set Syntax: Scala Improved"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"disa",
				"SublimeCodeIntel: Disable Plugin"
			],
			[
				"ov",
				"Set Syntax: Objective-C++"
			],
			[
				"scala ",
				"Set Syntax: Scala Improved"
			],
			[
				"Scala",
				"Set Syntax: Scala"
			],
			[
				"Pyth",
				"Set Syntax: Python Improved"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"scaa",
				"SublimeREPL: Scala"
			],
			[
				"re",
				"SublimeREPL: Scala"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"gl",
				"Set Syntax: GLSL"
			],
			[
				"obj",
				"Set Syntax: Objective-C"
			],
			[
				"syn",
				"Set Syntax: C"
			],
			[
				"synt C",
				"Set Syntax: C"
			],
			[
				"objc",
				"Set Syntax: Objective-C"
			],
			[
				"snippet	",
				"Snippet: Do While Loop"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"repl",
				"SublimeREPL: Clojure"
			],
			[
				"pow",
				"Set Syntax: Powershell v2"
			],
			[
				"power",
				"Set Syntax: Powershell v2"
			],
			[
				"synsh",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"bat",
				"Set Syntax: Batch File"
			],
			[
				"ma",
				"Set Syntax: MATLAB"
			],
			[
				"M",
				"Set Syntax: MATLAB"
			],
			[
				"remp",
				"Package Control: Remove Package"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"symat",
				"Set Syntax: MATLAB"
			],
			[
				"in",
				"Package Control: Install Package"
			]
		],
		"width": 457.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists"
	],
	"file_history":
	[
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_0.12000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyParticles.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyFlow.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyHalosPaths.py",
		"/Users/krbalmryde/.ipython/profile_default/startup/00-profile.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/utils/vtkDarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis.sublime-project",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/.gitignore",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/README.md",
		"/Users/krbalmryde/Downloads/DataAnimation/DataAnimation.cxx",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis/DarkSkyVis/SDFReader.mm",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis/DarkSkyVis/SDFReader.h",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis/DarkSkyVis/DarkSkyVis.mm",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/docs/notes_and_musings.txt",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkTest.py",
		"/Users/krbalmryde/.bash_aliases",
		"/Users/krbalmryde/.bash_functions",
		"/Users/Shared/adi/adi.pb",
		"/Users/krbalmryde/Downloads/UnityPackages/install.ini",
		"/Users/krbalmryde/.bash_profile",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSkyFlow.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/utils/DarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkHedgeHog.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSkyParticles.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyHalos.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSky-StreamLines.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSkyTime.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSkyHalosPaths.py",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/images/DarkSkyTimeBox1.png",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/auto-rockstar.cfg",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/rockstar.cfg",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSkyHalosPaths.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSkyParticles.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/vtkDarkSkyHalos.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/ExtractDSData.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/doc/examples/yt/load_data.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSkyTime.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/DarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs524/StarReport/REVISIONS.txt",
		"/Users/krbalmryde/Dropbox/class-projects/cs524/StarReport/StarReport.bib",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/Paper/SciVis.inc",
		"/Users/krbalmryde/Dropbox/class-projects/cs524/StarReport/StarReport.inc",
		"/Users/krbalmryde/Dropbox/class-projects/cs524/StarReport/StarReport.tex",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/Paper/SciVis.tex",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSkyHalos.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ds14_cg_particle_velocity_to_VTK.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs335/.metadata/.plugins/com.python.pydev.analysis/python_v1_bm109oo8jsa5gnqmc06ekl12p/v1_indexcache/include_server.include_analyzer_5hwz.v1_indexcache",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/Paper/SciVis.inc",
		"/Users/krbalmryde/Downloads/pmcid-PMC3838923.nbib",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSky.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/MPIDarkSkyLayerExtraction.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/.gitignore",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/trackHalos.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/doc/examples/Animation.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/doc/examples/interactor_demo.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/topic8/MyNetCDF.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/useful.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs227/DoublyLinkedPriorityListTest.java",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/darksky",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/topic9/Topic9-Task2.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/ToBeParallel.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/data/ds14_scivis_0128/rockstar/hlists/hlist_1.00000.list",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/VTKDarkSky.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ToJsonTest.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/ds14_scivis_0128_1.000.json",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ExtractDSData.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/Topic9-Task2.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/UnPw.txt",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/func.sh",
		"/Users/krbalmryde/Downloads/materials/Data/velocityMag.vtk",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/VTKDarkSky-StreamLines.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/ToBeParallel.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ToBeParallel.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/examples/yt/load_data.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/VtkPointCloud.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/niiPy/src/NiftiVTK.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/util/color_circle_Ajj.pal",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/ds14_cg_particle_velocity_to_VTK.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs524/Journal/TextRendering/src/doc/lowlevel.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ContourWidget.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/foo.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/README.md",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/useful.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/testYTvr.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/explore.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/ReadMe.txt",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/topic9/TestT2.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/Topic9-Task1.py",
		"/Users/krbalmryde/Topic9-Task2.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/scriptT2",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/mpiPY/e2/sendRecv.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic6/MyNetCDF.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs524/Journal/TextRendering/src/SynestheticRenderer.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs524/Journal/TextRendering/src/TextRender.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/ISTA555/AnalyzeHappiness/Project1.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/ISTA555/YouAreWhatYouEat/src/Project4.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs524/Journal/TextRendering/src/util/WordPolarityVectorized.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/topic9/ReadMe.txt",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/topic9/scriptT1",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/topic9/Topic9-Task1.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/mpiPY/e4/scatter.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/script",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/topic9/script",
		"/Users/krbalmryde/Desktop/WebGL Export.html",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/topic9/func.sh",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/mpiPY/e1/helloworld.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/mpiPY/e1/script",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/topic9/.alias",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/mpiPY/e3/bcast.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/topic9/Topic9.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/Class.sublime-project",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs524/Journal/TextRendering/src/buildWordNet.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs524/Journal/TextRendering/src/data/SentiWordNet_3.0.0_20130122.txt",
		"/Users/krbalmryde/Dropbox/Class-projects/cs301/HW12/HW12.txt",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/data/ds14_scivis_0128/rockstar/hlists/hlist_0.65000.list",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/explore.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs524/Journal/README.md",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs524/Journal/TextRendering/Notes.md",
		"/Users/krbalmryde/Dropbox/Class-projects/cs524/Journal/.gitignore",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/.gitignore",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/doc/Redshift_blueshift.svg",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/useful.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/examples/yt/load_data_yt.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/data/ds14_scivis_0128/rockstar/out_97.list"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"chicago_health.json",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"frame",
			"vtkTimerCallback",
			"addPoints",
			"GetBounds",
			"min",
			"min()",
			"Min",
			"min",
			"xyz",
			"x",
			"0",
			"x",
			"l2a",
			"position",
			"sdfdata.parameters.get",
			"   ",
			"intoTheVoid",
			"CreateRepeatingTimer",
			"timer_count",
			"1.0",
			".parameters",
			"intoTheVoid",
			"AdjustPoints2",
			"->",
			"mapOverlap",
			"vtkDarkSkyFlow",
			"vtkPolyData",
			"vtkDepth",
			"vtkTimerCallback",
			"TimerCallbackFunction",
			"HaloPath",
			"intoTheVoid",
			"__createLUT",
			"__MakeLUT",
			"vtkDarkSkyFlow",
			"addPoints",
			"            \n",
			"__normalize",
			"__scalar",
			"__normalize",
			"initVTK",
			"vtkDarkSkyParticles",
			"__scalar",
			"particle.size",
			"=*malloc",
			"\\= * malloc",
			"= * malloc",
			"malloc",
			"types",
			"hdr",
			"ParticleLoaderSDF",
			"vtkScalars",
			"sdfPosition",
			"parameters",
			"sdfGet",
			"SDFWrangler",
			"setMinMaxRange",
			"dk.",
			"darkSky",
			"self.sdf",
			"sdfPosition",
			"particles",
			"__normalize",
			"__setMinMaxRange",
			"__toCoMoving",
			"self.",
			"vtkDepth",
			"4",
			"vtkDarkSkyFlow",
			"Cell",
			"vtkScalar",
			"self.vtkStructuredGrid.",
			"vtkPolyData",
			"->",
			"512",
			"derer->",
			"->",
			"HedgeHod",
			"initHedgeHog",
			"vtkFlowActor",
			"__setMapper",
			"__getMagnitude",
			"=",
			"__getUVW",
			"self.yt",
			"vtkVelocity",
			"__getMagnitude",
			"= self.sdfParticles['",
			"__getUVW",
			"sdfGetXYZ",
			"vtkStreamActor",
			"vtkHedgHogActor",
			"filename",
			"vtkDarkSkyParticles",
			"VtkDarkSky",
			"__setMinMaxRange",
			"resetPoints",
			"sdfIdent",
			"vtkDepth",
			"vtkVelocity",
			"vtkDepth",
			"uvw",
			"WriteVectorField",
			",",
			"__setitem__",
			"vtkDepth",
			"halo ",
			"pos",
			"counter",
			"sdfIndex",
			"index",
			"particle_index",
			"__ytGetDarkMatterPaticleData",
			"__getDarkMatterPaticleData",
			"vtkDepth",
			"VtkDarkSkyParticles",
			"*",
			"Pics",
			"self.yt",
			"yt",
			"vtkTimerCallback",
			"sdf",
			"VtkDarkSky",
			"particle_velocity",
			"self",
			"addPoints",
			"Zoom",
			"vtkTimerCallback"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			". Neuroimaging",
			" neuroimaging",
			"neuroimaging",
			"Neuroimaging",
			"hub",
			"Hub",
			"\"district\":",
			"community",
			"\"side\":\"central\",(\"slug\":)(\"rogers_park\"|\"loop\")",
			",\"side\":\"central\",$1",
			"secondary",
			"\"secondary\"",
			"\"neighborhood\"",
			"\"community\"",
			"\"side\"",
			"\n,\"",
			";\\n",
			"\"\"\"\n",
			"\n",
			"\n\n",
			"\n",
			"\n\n",
			"\n",
			"\n\n",
			"",
			"\n",
			"\\n",
			"\n",
			"",
			"\n",
			"\n\n\n",
			"\n",
			"",
			"\n",
			"!Audio\\DING.wav,\"0,0,0\",700",
			"/",
			"",
			"2",
			"",
			".wav",
			"2.wa",
			"	",
			"    ",
			"\\t",
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "darksky/vtkExtractHaloContents.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4126,
						"regions":
						{
						},
						"selection":
						[
							[
								920,
								920
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "darksky/utils/vtkDarkSkyUtilities.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11471,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "darksky/vtkDarkSkyTime.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10678,
						"regions":
						{
						},
						"selection":
						[
							[
								9639,
								9639
							]
						],
						"settings":
						{
							"spell_check": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4853.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "darksky/vtkDarkSkyParticles.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 11338,
						"regions":
						{
						},
						"selection":
						[
							[
								182,
								187
							],
							[
								9425,
								9430
							],
							[
								9496,
								9520
							],
							[
								9767,
								9777
							],
							[
								10338,
								10347
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4805.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3199,
						"regions":
						{
						},
						"selection":
						[
							[
								2943,
								3053
							]
						],
						"settings":
						{
							"auto_name": "Provide a 100-200 word description of your resear",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 903.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1458,
						"regions":
						{
						},
						"selection":
						[
							[
								1039,
								1089
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1560,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"auto_name": "A View Through Space and Time of a Dark Sky",
							"spell_check": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.499769590192,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 158.0
	},
	"output.find_results":
	{
		"height": 126.0
	},
	"pinned_build_system": "",
	"project": "DarkSkyVis.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"read",
				"README.md"
			],
			[
				"use",
				"darksky/utils/vtkDarkSkyUtilities.py"
			],
			[
				"utili",
				"darksky/utils/vtkDarkSkyUtilities.py"
			],
			[
				"par",
				"darksky/vtkDarkSkyParticles.py"
			],
			[
				"vtkdark",
				"darksky/vtkDarkSkyFlow.py"
			],
			[
				"darkskyt",
				"darksky/vtkDarkSkyTime.py"
			],
			[
				"",
				"darksky/VTKDarkSkyFlow.py"
			],
			[
				"ut",
				"darksky/utils/DarkSkyUtilities.py"
			],
			[
				"re",
				"README.md"
			],
			[
				"vtk",
				"darksky/VTKDarkSkyParticles.py"
			],
			[
				"u",
				"darksky/utils/DarkSkyUtilities.py"
			],
			[
				"str",
				"darksky/VTKDarkSky-StreamLines.py"
			],
			[
				"scivis",
				"cs594/SciVis2015/Paper/SciVis.inc"
			],
			[
				"vtkdar",
				"cs594/SciVis2015/src/VTKDarkSkyHalos.py"
			],
			[
				"scivis.inc",
				"cs335/.metadata/.plugins/com.python.pydev.analysis/python_v1_bm109oo8jsa5gnqmc06ekl12p/v1_indexcache/include_server.include_analyzer_5hwz.v1_indexcache"
			],
			[
				"vtkd",
				"cs594/SciVis2015/src/VTKDarkSky.py"
			],
			[
				"star",
				"cs524/StarReport/StarReport.tex"
			],
			[
				"starr",
				"cs524/StarReport/StarReport.inc"
			],
			[
				"project4",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			],
			[
				"ista555",
				"ISTA555/AnalyzeHappiness/Project1.py"
			],
			[
				"topic8",
				"cs594/topic8/MyNetCDF.py"
			],
			[
				"hlist_1",
				"cs594/SciVis2015/data/ds14_scivis_0128/rockstar/hlists/hlist_1.00000.list"
			],
			[
				"hlist_0.65000.list",
				"cs594/SciVis2015/data/ds14_scivis_0128/rockstar/hlists/hlist_0.65000.list"
			],
			[
				"ex",
				"cs594/SciVis2015/src/explore.py"
			],
			[
				"sen",
				"cs524/Journal/TextRendering/src/data/SentiWordNet_3.0.0_20130122.txt"
			],
			[
				"topic",
				"cs594/topic5/Topic5.py"
			],
			[
				"nif",
				"cs594/niiPy/src/NiftiVTK.py"
			],
			[
				"myne",
				"cs594/topic7/MyNetCDF.py"
			],
			[
				"hw10",
				"cs301/HW10/HW10.cpp"
			],
			[
				"cy",
				"cs594/topic5/cylinder.vtk"
			],
			[
				"niipy",
				"cs594/niiPy/niftiRenderer.py"
			],
			[
				"rend",
				"cs594/niiPy/vtk_render.py"
			],
			[
				"hw1.t",
				"ISTA516/HW1/hw1.tex"
			],
			[
				"main.j",
				"cs424/HW3/RightHereRightNow.github.io/javascripts/main.js"
			],
			[
				"basic",
				"cs424/Notes/basic.html"
			],
			[
				"topo",
				"cs424/HW2/bicyclerace.github.io/webapp/js/external-libraries/topojson.v1.min.js"
			],
			[
				"nc",
				"cs594/topic2/NetCDF_dump.txt"
			],
			[
				"syn",
				"cs524/Journal/BookVolRen/src/SynestheticRenderer.py"
			],
			[
				"data/one-grams.txt",
				"ISTA555/YouAreWhatYouEat/data/one-grams.txt"
			],
			[
				"project1",
				"ISTA555/AnalyzeHappiness/Project1.py"
			],
			[
				"useful",
				"ISTA555/YouAreWhatYouEat/src/useful.py"
			],
			[
				"lab1",
				"cs251/Lab13/lab13.txt"
			],
			[
				"overb",
				"cs251/HW1/Prog1Overboard.cpp"
			],
			[
				"dic",
				"cs251/HW5/HW5/dictionary.txt"
			],
			[
				"uber",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/UberMarker.js"
			],
			[
				"yelp",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/YelpMarker.js"
			],
			[
				"cta",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/CTAMarker.js"
			],
			[
				"databa",
				"cs424/HW3/RightHereRightNow.github.io/APP/data/database.js"
			],
			[
				"sol",
				"cs251/lab10/Solution.cpp"
			],
			[
				"solu",
				"cs251/lab10/Solution.cpp"
			],
			[
				"uiweath",
				"cs424/HW2/bicyclerace.github.io/webapp/js/controllers/ui/UIWeatherViewController.js"
			],
			[
				"uiwea",
				"cs424/HW2/bicyclerace.github.io/webapp/styles/UIWeatherViewController.css"
			],
			[
				"us.",
				"cs424\\Notes\\Choropleth\\us.json"
			],
			[
				"step",
				"cs424\\HW1\\step-7.html"
			],
			[
				"uk",
				"cs424\\HW1\\uk.json"
			],
			[
				"chi",
				"cs424\\HW1\\data\\chicago_health2.json"
			],
			[
				"dataf",
				"cs424\\HW1\\backup\\dataFix.html"
			],
			[
				"chica",
				"cs424\\HW1\\data\\chicago_health.json"
			],
			[
				"chea",
				"cs424\\HW1\\chicago_health.json"
			],
			[
				"chicagogeocrs84",
				"cs424\\HW1\\data\\chicagoGEOcrs84.json"
			],
			[
				"home4",
				"cs533/HW4/HW4/homework4.cpp"
			],
			[
				"homewo5",
				"cs533/HW5/HW5/homework5.cpp"
			],
			[
				"detec",
				"ISTA516/HW5/js/Detector.js"
			],
			[
				"1",
				"ISTA516/HW5/1st.html"
			],
			[
				"sort",
				"cs227/SortTest.java"
			],
			[
				"home",
				"cs533/HW3/homework3.cpp"
			],
			[
				"hw1",
				"cs533/HW1/hw1.cxx"
			],
			[
				"demo",
				"cs533/HW1/paintdemo_mac/demo.cxx"
			],
			[
				"geo",
				"ISTA555/Docs/twitter_code/GeoTag.scala"
			],
			[
				"emo",
				"ISTA555/YouAreWhatYouEat/data/Emoji-FreqDist.txt"
			],
			[
				"emoj",
				"ISTA555/YouAreWhatYouEat/data/etc/emoji-codes.txt"
			],
			[
				"project2",
				"ISTA555/GoodMovieOrBad/docs/project2_key.py"
			],
			[
				"project4.",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			],
			[
				"proj2",
				"ISTA555/GoodMovieOrBad/docs/project2_key.py"
			],
			[
				"project4re",
				"ISTA555/YouAreWhatYouEat/docs/Project 4 Report.txt"
			],
			[
				"proj4",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			],
			[
				"perspouse",
				"ISTA555/NSAInterview/docs/project3_data/per_spouse.test"
			],
			[
				"movi",
				"ISTA555/GoodMovieOrBad/src/MovieSentiment.scala"
			],
			[
				"slice",
				"osx/examples/niftiViewer/niftiViewer/Slices.mm"
			],
			[
				"pro",
				"src/Program.cpp"
			],
			[
				"pr",
				"src/Program.cpp"
			],
			[
				"in",
				"osx/Includes.hpp"
			],
			[
				"be",
				"src/Behavior.cpp"
			],
			[
				"co",
				"osx/CocoaGL.mm"
			],
			[
				"ren",
				"osx/RendererOSX.mm"
			],
			[
				"ma",
				"niftiViewer/niftiViewer/Main.mm"
			],
			[
				"prog",
				"src/Program.cpp"
			],
			[
				"progr",
				"src/Program.cpp"
			],
			[
				"mri",
				"Utilities/.Utilities.backup/MRI.py"
			],
			[
				"java",
				"Scripts/Java/JavaBatRecursion/JavaBat_Recursion.java"
			],
			[
				"ass2",
				"CLASS/cs372/ass2.hs"
			],
			[
				"javab",
				"Scripts/Java/JavaBatRecursion/JavaBat_Recursion.java"
			],
			[
				"pig",
				"Scripts/CLOJURE/piglatin.clj"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Dropbox/Code-Projects/EVL/LTG/ltg.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 219.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
