{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"y",
				"y_min"
			],
			[
				"halo",
				"haloData"
			],
			[
				"line",
				"lineMesh"
			],
			[
				"sdf",
				"sdfPosition"
			],
			[
				"sdfGet",
				"sdfGetAcceleration"
			],
			[
				"setM",
				"setMinMaxRange"
			],
			[
				"vtkStr",
				"vtkStructuredGrid"
			],
			[
				"initS",
				"initStreamlines	function"
			],
			[
				"init",
				"initHedgeHog"
			],
			[
				"sdfP",
				"sdfPhi	statement"
			],
			[
				"fi",
				"filename	statement"
			],
			[
				"Parti",
				"particle_index"
			],
			[
				"for",
				"forin	for … in … done"
			],
			[
				"except",
				"Exception	class"
			],
			[
				"rand",
				"random	statement"
			],
			[
				"Get",
				"GetPointData"
			],
			[
				"__m",
				"__setMapper	function"
			],
			[
				"get",
				"getPartitions	function"
			],
			[
				"gmaen",
				"gmean"
			],
			[
				"fo",
				"following"
			],
			[
				"sub",
				"Subvolume"
			],
			[
				"process",
				"processess"
			],
			[
				"try",
				"try	Try/Except"
			],
			[
				"Sca",
				"SCALA_HOME"
			],
			[
				"scalar",
				"scalar_range	statement"
			],
			[
				"nL",
				"nLon	param"
			],
			[
				"data",
				"data_at_comp_pos"
			],
			[
				"NetCDF",
				"netCDF4"
			],
			[
				"outline",
				"outlineActor"
			],
			[
				"text",
				"textShape	statement"
			],
			[
				"Ky",
				"Kyle_MPRAGE"
			],
			[
				"lat",
				"latitude"
			],
			[
				"long",
				"longitude"
			],
			[
				"Adj",
				"AdjMatrix"
			],
			[
				"la",
				"layerGroups"
			],
			[
				"layerGrou",
				"layerGroupName"
			],
			[
				"proto",
				"prototype"
			],
			[
				"start",
				"startCity"
			],
			[
				"brea",
				"breadthFirstSearch"
			],
			[
				"ve",
				"vertex"
			],
			[
				"num",
				"numNodes"
			],
			[
				"lev",
				"Level"
			],
			[
				"level",
				"printLevelSpacingStart"
			],
			[
				"heap",
				"heaplvl5"
			],
			[
				"hea",
				"heaplvl5"
			],
			[
				"cur",
				"curLvl"
			],
			[
				"Clou",
				"Cloud-Rain"
			],
			[
				"cit",
				"cityName"
			],
			[
				"elas",
				"elapsedArray"
			],
			[
				"clac",
				"calculateTimeNode"
			],
			[
				"ela",
				"elapsedNode"
			],
			[
				"qu",
				"quantity"
			],
			[
				"quan",
				"quantities"
			],
			[
				"cla",
				"calculateTimeArray"
			],
			[
				"inser",
				"insertNode"
			],
			[
				"star",
				"startTime"
			],
			[
				"clock",
				"clock_t"
			],
			[
				"begin",
				"beginTime"
			],
			[
				"time",
				"time_t"
			],
			[
				"p",
				"pNodes"
			],
			[
				"tre",
				"treeNode"
			],
			[
				"con",
				"console"
			],
			[
				"comm",
				"community"
			],
			[
				"F",
				"FarNorthSide"
			],
			[
				"if",
				"ife	if … else"
			],
			[
				"Sout",
				"SouthSide"
			],
			[
				"West",
				"WestSide"
			],
			[
				"read",
				"readlines	function"
			],
			[
				"po",
				"position"
			],
			[
				"poin",
				"pointLight"
			],
			[
				"Po",
				"pointLight"
			],
			[
				"sp",
				"sphereMaterial"
			],
			[
				"base",
				"buildDataset"
			],
			[
				"Freq",
				"FreqDist"
			],
			[
				"pre",
				"preprocessing"
			],
			[
				"classif",
				"classification"
			],
			[
				"constru",
				"constructFeatureIndex"
			],
			[
				"filt",
				"filterFeatureFrequency"
			],
			[
				"feature",
				"featureDist"
			],
			[
				"token",
				"tokenNegation"
			],
			[
				"twi",
				"twokenizer"
			],
			[
				"emoji",
				"emojiRE"
			],
			[
				"class",
				"class	class"
			],
			[
				"cc",
				"cc	shortcut - case class"
			],
			[
				"case",
				"case	case"
			],
			[
				"useCl",
				"useCluster4"
			],
			[
				"def",
				"define"
			],
			[
				"pr",
				"prn-str"
			],
			[
				"prn",
				"prn-str"
			],
			[
				"stim",
				"stimListPath"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import json\nimport numpy as np\nimport sdfpy as sdf\nimport os.path as op\nfrom glob import glob\n\ndef a2l(a):\n    return list(a)\n\ndef l2a(l):\n    return np.array(l)\n\n\n\ndef main():\n    RAW = \"../data\"\n    PARTICLES = op.join(RAW, \"ds14_scivis_0128\", \"ds14_scivis_0128_e4_dt04_[0-1].[0-9][0-9]00\")\n    PARTICLE_FILES = l2a(glob(PARTICLES))\n\n    pIDS = { \n        \"1565818\": [], \"1566041\": [],\n        \"1565821\": [], \"1566042\": [],\n        \"1565822\": [], \"1566145\": [],\n        \"1565928\": [], \"1566149\": [] \n    }\n\n\n    for i, fn in enumerate(PARTICLE_FILES):\n        if i < 11:\n            pass\n        else:\n            particles = sdf.load_sdf(fn)\n            particles['ident'].index\n\n\nif __name__ == '__main__':\n    main()\n\n\n\"\"\"\nt 0 -------  t 0 -------  t 0 -------  t 0 -------  t 0 -------  t 0 -------\nt 1 1566041  t 1 1565928  t 1 1565821  t 1 1566145  t 1 1565822  t 1 1566042  \nt 2 1566041  t 2 1565928  t 2 1565821  t 2 1566145  t 2 1565822  t 2 1566042  \nt 3 1566041  t 3 1565928  t 3 1565821  t 3 1566145  t 3 -------  t 3 -------  t 3 1565818 t 3 1566149\nt 4 1566041  t 4 1565928  t 4 1565821  t 4 1566145  t 4 -------  t 4 -------\nt 5 1566041  t 5 1565928  t 5 1565821  t 5 1566145  t 5 1565822  t 5 1566042               \nt 6 1566041  t 6 1565928  t 6 1565821  t 6 -------  t 6 1565822  t 6 1566042    \n\n\"\"\"",
			"settings":
			{
				"buffer_size": 1319,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import json\nimport numpy as np\nimport sdfpy as sdf\nimport os.path as op\nfrom glob import glob\nimport thingking as tk\nfrom vtkDarkSkyUtilities import Halo\n\n\ndef l2a(l):\n    return np.array(l)\n\n\ndef getDomainWidth(sdfPosition):\n    print \"\\tgetDomainWidth\"\n    rmin = l2a([sdfPosition[:, 0].min(),\n                sdfPosition[:, 1].min(),\n                sdfPosition[:, 2].min()])\n\n    rmax = l2a([sdfPosition[:, 0].max(),\n                sdfPosition[:, 1].max(),\n                sdfPosition[:, 2].max()])\n\n    # true_domain_left = rmin.copy()\n    # true_domain_right = rmax.copy()\n    true_domain_width = rmax - rmin\n    return true_domain_width\n\n\ndef shift_periodic(pos, left, right, domain_width):\n    \"\"\"\n    Periodically shift positions that are right of left+domain_width to\n    the left, and those left of right-domain_width to the right.\n    \"\"\"\n    print \"\\tshift_periodic\"\n    for i in range(3):\n        mask = pos[:, i] >= left[i] + domain_width[i]\n        pos[mask, i] -= domain_width[i]\n        mask = pos[:, i] < right[i] - domain_width[i]\n        pos[mask, i] += domain_width[i]\n    return\n\n\ndef alignParticlesToHalos(time, particles, halo_xyz_mins):\n    print \"\\talignParticlesToHalos:\"\n    h_100 = particles.parameters['h_100']\n    width = particles.parameters['L0']\n    cosmo_a = particles.parameters['a']\n    kpc_to_Mpc = 1. / 1000\n    sl = slice(0, None)\n\n    convert_to_cMpc = lambda proper: ((proper + width) * h_100 * kpc_to_Mpc / cosmo_a)\n\n    x_min = convert_to_cMpc(particles['x'][sl]).min()\n    y_min = convert_to_cMpc(particles['y'][sl]).min()\n    z_min = convert_to_cMpc(particles['z'][sl]).min()\n\n    x_offset = abs(halo_xyz_mins[0] - x_min);\n    y_offset = abs(halo_xyz_mins[1] - y_min);\n    z_offset = abs(halo_xyz_mins[2] - z_min);\n\n    if time == \"0.13\":\n        print \"\\ttime is\", time\n        print \"\\tOld offsets were,\", x_offset, y_offset, z_offset\n        x_offset, y_offset, z_offset = 449.188867109, 449.153197109, 449.131007109\n    elif time == \"0.12\":\n        print \"\\ttime is\", time\n        print \"\\tOld offsets were,\", x_offset, y_offset, z_offset\n        x_offset, y_offset, z_offset = 489.276994541, 489.276994541, 489.276994541\n    else:\n        pass\n\n    print \"\\t\\toffsets are\", x_offset, y_offset, z_offset\n    positions = np.dstack([\n        convert_to_cMpc(particles['x'][sl]) - x_offset,\n        convert_to_cMpc(particles['y'][sl]) - y_offset,\n        convert_to_cMpc(particles['z'][sl]) - z_offset\n    ])[0]  # fyi, dstack spits out a tuple with an extra dimension. We need to decouple it\n    print \"\\t\\t\", positions.shape\n    return positions\n\n\ndef filter_sphere(time, center, radius, xyz_mins):\n    \"\"\"\n    Filter data by masking out data outside of a sphere defined\n    by a center and radius. Account for periodicity of data, allowing\n    left/right to be outside of the domain.\n    \"\"\"\n    print \"filter_sphere\", time, center, radius, xyz_mins\n\n    # Load relevant particle data file\n    pfn = \"../data/ds14_scivis_0128/ds14_scivis_0128_e4_dt04_\" + time + \"00\"\n    particles = sdf.load_sdf(pfn)\n\n    # Get left/right for periodicity considerations\n    left = center - radius\n    right = center + radius\n\n    # Align the particle data with the halo data\n    positions = alignParticlesToHalos(time, particles, xyz_mins)\n\n    # Determine the domain width\n    domain_width = getDomainWidth(positions)\n\n    # Account for periodicity of the particle data...I guess?\n    shift_periodic(positions, left, right, domain_width)\n\n    # Now get all particles that are within the sphere\n    mask = ((positions - center) ** 2).sum(axis=1) ** 0.5 < radius\n    print \"\\tFiltering particles, returning %i out of %i\" % (mask.sum(), mask.shape[0])\n\n    if not np.any(mask):\n        pass\n    print \"\\tmask is\", mask, mask.size\n\n    # Build a dictionary with each axis as a key\n    filtered = {ax: list(positions[:, i][mask]) for i, ax in enumerate('xyz')}\n    print \"\\tfiltered Before: {x}\", len(filtered['x'])\n\n    # add the particles ID to the dictionary, mosly so that we have it\n    filtered[\"id\"] = list(particles['ident'][mask])\n    filtered = [{'x': float(ax[0]), 'y': float(ax[1]), 'z': float(ax[2]), 'id': ax[3]} for ax in\n                zip(filtered[\"x\"], filtered[\"y\"], filtered[\"z\"], filtered[\"id\"])]\n    print \"\\tfiltered After\", filtered[:3]\n    return filtered\n\n\ndef getHaloMinMaxXYZ(Halos):\n    '''\n    Loads the Halo file, extracts the x,y,z coords for all halos, then computes\n    the min of each axis. Used for scaling the dark matter particles\n    '''\n    # Load the a=1 Rockstar hlist file. The header of the file lists the useful\n    # units/information.\n    x_min = l2a([hl.position[0] for hl in Halos]).min()\n    y_min = l2a([hl.position[1] for hl in Halos]).min()\n    z_min = l2a([hl.position[2] for hl in Halos]).min()\n    return (x_min, y_min, z_min)\n\n\ndef intoTheVoid(fileList, TargetID, pID, coords, n):\n    \"\"\"\n    The name is silly, but the role it serves in not\n\n    Recursive Halo tracker which follows the parent/descendant Targetid of a Halo\n    across a set of Halo-Files/Time Points.\n\n    Returns a set of coordinates of a Halo's position over time\n    \"\"\"\n    print len(fileList), TargetID, pID, len(coords), n\n    if len(fileList) == 0:\n        print \"file is empty\"\n        return coords, n\n\n    hfn = fileList[0]\n    time = hfn[-12:-8]\n    halosObjs = l2a([Halo(hl) for hl in tk.loadtxt(hfn)])\n    halo_xyz_mins = getHaloMinMaxXYZ(halosObjs)\n    haloIDList = l2a([halo.id for halo in halosObjs])\n    if TargetID is None:\n        print TargetID, \"is None\"\n        TargetID = haloIDList[0]\n    index = (haloIDList == TargetID).nonzero()[0][0]\n    if index < 0 or index is []:\n        print \"its -1!\"\n        return coords, n\n    elif index > -1:\n        tHl = halosObjs[index]\n        halo = {\n            \"time\": n,\n            \"xyz\": list(tHl.position),\n            \"rvir\": tHl.rvir * (1. / 1000),  # radius, in mpc rather than kpc\n            \"rs\": tHl.rs,  # scale radius\n            \"id\": tHl.id,\n            \"child\": tHl.desc_id,\n            \"particles\": filter_sphere(\n                            time,\n                            tHl.position,\n                            tHl.rvir * (1. / 1000),\n                            halo_xyz_mins\n                        )\n        }\n        coords.append(halo)\n        return intoTheVoid(fileList[1:], tHl.desc_id, tHl.id, coords, n + 1)\n\n\ndef extract_haloPath_and_particles():\n    RAW = \"../data\"\n    ROCKSTAR = op.join(RAW, \"rockstar\", \"hlists\", \"hlist_[0-1].[0-9][0-9]000.*\")\n    HALO_FILES = l2a(glob(ROCKSTAR))\n    # PARTICLES = op.join(RAW, \"ds14_scivis_0128\", \"ds14_scivis_0128_e4_dt04_[0-1].[0-9][0-9]00\")\n    # PARTICLE_FILES = l2a(glob(PARTICLES))\n\n    HALO_ID_LIST = [257., 259., 260., 263., 265., 129., 131., 132., 133.,\n                    228., 224., 248., 335., 135., 125., 184., 121., 113.,\n                    318., 300., 75., 76., 5., 340., 80., 82., 245.,\n                    178., 169., 37., 226., 65., 64., 102., 284., 289.,\n                    286., 126., 62., 22., 174., 163., 341., 342., 69.,\n                    72., 151., 321., 137., 31., 78., 79., 4., 180.,\n                    74., 179., 272., 283., 247., 36., 71., 199., 290.]\n\n\n    # Get a list of coordinates starting with a halo at time \"zero\".\n\n    for i, haloID in enumerate(HALO_ID_LIST[0:1]):  # Limiting our list to just one HALO\n        # haloFileIndex = i + 0\n        HaloObjs, time = intoTheVoid(HALO_FILES, haloID, -1, [], 0)\n        print \"\\nwe have a total of\", len(HaloObjs), \"Halos\"\n        for j, halo in enumerate(HaloObjs):\n            print i, halo['id'], haloID\n            print \"Halo has\", len(halo['particles']), \"particles\"\n            outFileName = \"_\".join([\"Halo\", str(haloID), 't' + str(j + 12)]) + \".json\"\n            print \"our output file is\", outFileName\n            with open(outFileName, 'w') as outfile:\n                outfile.write(json.dumps(halo))\n\n\ndef extract_particle_path():\n    RAW = \"../data\"\n    ROCKSTAR = op.join(RAW, \"rockstar\", \"hlists\", \"hlist_[0-1].[0-9][0-9]000.*\")\n    PARTICLES = op.join(RAW, \"ds14_scivis_0128\", \"ds14_scivis_0128_e4_dt04_[0-1].[0-9][0-9]00\")\n\n    HALO_FILES = l2a(glob(ROCKSTAR))\n    PARTICLE_FILES = l2a(glob(PARTICLES)[10:])\n\n    for i in range( )\n\n\nif __name__ == '__main__':\n    extract_haloPath_and_particles()\n",
			"file": "DarkSkyPy/PrepProcDMH.py",
			"file_size": 8269,
			"file_write_time": 130782789670000000,
			"settings":
			{
				"buffer_size": 8295,
				"line_ending": "Unix"
			}
		},
		{
			"file": "DarkSkyJs/js/utils/Utils.js",
			"settings":
			{
				"buffer_size": 11783,
				"line_ending": "Unix"
			}
		},
		{
			"file": "DarkSkyJs/src/examples/example_drawCalls.js",
			"settings":
			{
				"buffer_size": 7710,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "fo",
		"selected_items":
		[
			[
				"fo",
				"Format: Javascript"
			],
			[
				"p",
				"Set Syntax: Python"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"ja",
				"Set Syntax: JavaScript"
			],
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"for",
				"Format: Javascript"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"py	",
				"Set Syntax: Python"
			],
			[
				"te",
				"Set Syntax: LaTeX"
			],
			[
				"tex",
				"Set Syntax: LaTeX"
			],
			[
				"bas",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"lint",
				"Anaconda: Next lint error"
			],
			[
				"ba",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"lat",
				"Set Syntax: LaTeX"
			],
			[
				"syc++",
				"Set Syntax: C++"
			],
			[
				"syp",
				"Set Syntax: Python"
			],
			[
				"",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"ana",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"anacon lin",
				"Anaconda: Next lint error"
			],
			[
				"late",
				"Set Syntax: LaTeX"
			],
			[
				"snip",
				"Snippet: Sub Sub Section"
			],
			[
				"md",
				"Set Syntax: Markdown"
			],
			[
				"anaconda disable",
				"Anaconda: Disable linting on this file"
			],
			[
				"anaconda d",
				"Anaconda: Disable linting on this file"
			],
			[
				"dis",
				"Anaconda: Disable linting on this file"
			],
			[
				"disabl",
				"Anaconda: Disable linting on this file"
			],
			[
				"ANAconda: li",
				"Anaconda: Disable linting on this file"
			],
			[
				"mar",
				"Set Syntax: MultiMarkdown"
			],
			[
				"PY",
				"Set Syntax: Python"
			],
			[
				"cm",
				"Set Syntax: CMake"
			],
			[
				"c",
				"Set Syntax: C++"
			],
			[
				"htm",
				"Set Syntax: HTML"
			],
			[
				"html",
				"Set Syntax: HTML (Rails)"
			],
			[
				"F",
				"Format Code"
			],
			[
				"f",
				"Format Code"
			],
			[
				"form",
				"Format Code"
			],
			[
				"js",
				"Set Syntax: JSON"
			],
			[
				"code",
				"Format Code"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"For",
				"Format Code"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"packare",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"JSO",
				"Set Syntax: JSON"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"snipp",
				"Snippet: Tabular"
			],
			[
				"snippet",
				"Snippet: Chapter"
			],
			[
				"sca",
				"Set Syntax: Scala Improved"
			],
			[
				"scala",
				"Set Syntax: Scala"
			],
			[
				"hask",
				"Set Syntax: Haskell"
			],
			[
				"scal",
				"Set Syntax: Scala Improved"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"disa",
				"SublimeCodeIntel: Disable Plugin"
			],
			[
				"ov",
				"Set Syntax: Objective-C++"
			],
			[
				"scala ",
				"Set Syntax: Scala Improved"
			],
			[
				"Scala",
				"Set Syntax: Scala"
			],
			[
				"Pyth",
				"Set Syntax: Python Improved"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"scaa",
				"SublimeREPL: Scala"
			],
			[
				"re",
				"SublimeREPL: Scala"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"gl",
				"Set Syntax: GLSL"
			],
			[
				"obj",
				"Set Syntax: Objective-C"
			],
			[
				"syn",
				"Set Syntax: C"
			],
			[
				"synt C",
				"Set Syntax: C"
			],
			[
				"objc",
				"Set Syntax: Objective-C"
			],
			[
				"snippet	",
				"Snippet: Do While Loop"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"repl",
				"SublimeREPL: Clojure"
			],
			[
				"pow",
				"Set Syntax: Powershell v2"
			],
			[
				"power",
				"Set Syntax: Powershell v2"
			],
			[
				"synsh",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"bat",
				"Set Syntax: Batch File"
			],
			[
				"ma",
				"Set Syntax: MATLAB"
			],
			[
				"M",
				"Set Syntax: MATLAB"
			],
			[
				"remp",
				"Package Control: Remove Package"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"symat",
				"Set Syntax: MATLAB"
			],
			[
				"in",
				"Package Control: Install Package"
			]
		],
		"width": 457.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/examples",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy"
	],
	"file_history":
	[
		"/Users/krbalmryde/.bash_aliases",
		"/Users/krbalmryde/.bash_functions",
		"/Users/krbalmryde/.bash_profile",
		"/Users/krbalmryde/.ipython/profile_default/startup/00-profile.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_0.13000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_0.12000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/vtkDarkSkyHalos.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/.gitignore",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/README.md",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/PrepProcDMH.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/FilterCoords.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/pretty_Halo_257.0_tAll.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/pretty_Halo_257.0_t12.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/aggregate_Halo_257_tALL.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/extractHaloAndParticles.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/Halo_257.0_t12.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/assets/Halo_257.0_t100.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t99.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t15.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t16.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t17.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t18.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t19.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t20.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t14.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t12.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/Halo_257.0_t13.json",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/exampleSDF.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/offsets_times.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/correct_function.txt",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/conversion.txt",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/js/Utils.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/example_drawCalls.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/hlists/hlist_1.00000.list",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step3a.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/index.html",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step3.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/css/style.css",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/css/jquery.nouislider.css",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/css/jquery.nouislider.pips.css",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/css/jquery.nouislider.min.css",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/__forlater.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step1.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/LTG/processing-poster-client/src/main/resources/closeQT.sh",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/js/dat.gui.min.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/js/dat.gui.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/js/OrbitControls.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step012.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step0.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/vtkDarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/vtkDarkSkyParticles.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyPy/utils/vtkDarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyJs/src/Step2.js",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis.sublime-project",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis.xcodeproj/project.pbxproj",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkExtractHaloContents.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/utils/vtkDarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyTime.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyParticles.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyFlow.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyHalosPaths.py",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/krbalmryde/Downloads/DataAnimation/DataAnimation.cxx",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis/DarkSkyVis/SDFReader.mm",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis/DarkSkyVis/SDFReader.h",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/DarkSkyVis/DarkSkyVis/DarkSkyVis.mm",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/docs/notes_and_musings.txt",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkTest.py",
		"/Users/Shared/adi/adi.pb",
		"/Users/krbalmryde/Downloads/UnityPackages/install.ini",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSkyFlow.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/utils/DarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkHedgeHog.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSkyParticles.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/vtkDarkSkyHalos.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSky-StreamLines.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSkyTime.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/darksky/VTKDarkSkyHalosPaths.py",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/Users/krbalmryde/Library/Application Support/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/images/DarkSkyTimeBox1.png",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/auto-rockstar.cfg",
		"/Users/krbalmryde/Dropbox/Code-Projects/EVL/DarkSkyVis/data/rockstar/rockstar.cfg",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSkyHalosPaths.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSkyParticles.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/vtkDarkSkyHalos.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/ExtractDSData.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/doc/examples/yt/load_data.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSkyTime.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/DarkSkyUtilities.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs524/StarReport/REVISIONS.txt",
		"/Users/krbalmryde/Dropbox/class-projects/cs524/StarReport/StarReport.bib",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/Paper/SciVis.inc",
		"/Users/krbalmryde/Dropbox/class-projects/cs524/StarReport/StarReport.inc",
		"/Users/krbalmryde/Dropbox/class-projects/cs524/StarReport/StarReport.tex",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/Paper/SciVis.tex",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSkyHalos.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ds14_cg_particle_velocity_to_VTK.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs335/.metadata/.plugins/com.python.pydev.analysis/python_v1_bm109oo8jsa5gnqmc06ekl12p/v1_indexcache/include_server.include_analyzer_5hwz.v1_indexcache",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/Paper/SciVis.inc",
		"/Users/krbalmryde/Downloads/pmcid-PMC3838923.nbib",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/VTKDarkSky.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/MPIDarkSkyLayerExtraction.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/.gitignore",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/trackHalos.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/doc/examples/Animation.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/doc/examples/interactor_demo.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/topic8/MyNetCDF.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/useful.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs227/DoublyLinkedPriorityListTest.java",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/darksky",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/topic9/Topic9-Task2.py",
		"/Users/krbalmryde/Dropbox/class-projects/cs594/SciVis2015/src/ToBeParallel.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/data/ds14_scivis_0128/rockstar/hlists/hlist_1.00000.list",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/VTKDarkSky.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ToJsonTest.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/ds14_scivis_0128_1.000.json",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ExtractDSData.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/Topic9-Task2.py",
		"/Users/krbalmryde/Dropbox/Code-Projects/UnPw.txt",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/topic9/func.sh",
		"/Users/krbalmryde/Downloads/materials/Data/velocityMag.vtk",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/VTKDarkSky-StreamLines.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/ToBeParallel.py",
		"/Users/krbalmryde/Dropbox/Class-projects/cs594/SciVis2015/src/ToBeParallel.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/examples/yt/load_data.py",
		"/Users/krbalmryde/Dropbox/Class-Projects/cs594/SciVis2015/src/VtkPointCloud.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"chicago_health.json",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"root",
			"console.log(\"\\t ",
			"main",
			"dict()",
			",",
			"1565818",
			"1566145",
			"1566042",
			"1566041",
			"1565928",
			"1565822",
			"1565821",
			"Halo257_path.js:30      Made a fix! ",
			"Scale",
			"scale",
			"desc_scale",
			"1566149",
			"DarkSkyPy/",
			"id",
			"rs",
			"679582",
			"791067",
			"2001085",
			"2021731",
			"823681",
			"_offset",
			"shift_periodic",
			"pos",
			"][:,",
			"_min",
			"fn",
			".min()",
			" ",
			"h_",
			"y",
			"]-",
			"convert_to_cMpc",
			"print ",
			"i)",
			"i",
			"(proper + width/2.) * h_100 * kpc_to_Mpc / cosmo_a",
			"(proper + width) * h_100 * kpc_to_Mpc / cosmo_a",
			"particles.parameters",
			"(proper + width) * h_100 * kpc_to_Mpc / cosmo_a",
			"x",
			"particles",
			"_kpc_min",
			"particles",
			"min",
			"[0]",
			"min",
			"[0]",
			"(kpc_to_Mpc /(proper * h_100)) * cosmo_a",
			"(proper + width) * h_100 * kpc_to_Mpc / cosmo_a",
			"mpc",
			"kpc_",
			"_proper",
			"x_proper",
			".min()",
			"min",
			"proper",
			"convert_to_cMpc(particles",
			"particles",
			"pos",
			"),",
			"toCoMoving(",
			"particleFN",
			"id",
			"ID",
			"id",
			"ID",
			"id",
			"ID",
			"self.",
			"true_",
			"self.",
			"particleCount",
			"particlesData",
			"halosJson",
			"halos",
			"json",
			"pMaterial",
			"tail",
			"pointCloud",
			"PointCloud",
			"pointCloud",
			"function",
			"setup",
			"scene",
			"particles",
			"helper",
			"particles.",
			"particles",
			"drawStep1",
			"src",
			"filter_sphere",
			"__toCoMoving",
			"isCoMoving",
			"data",
			"__shift_periodic",
			"_shift_periodic",
			"__shift_periodic",
			"SDF",
			"sdf",
			"initSDF",
			"12",
			"sdfSetDomain",
			"sdfPosition",
			"radius",
			"i+",
			"i",
			"coods",
			"__toCoMoving",
			"sdfSetDomain",
			"sdfSetDomain()",
			"]",
			"true_domain_width",
			"vtkDarkSkyParticles",
			"pID",
			"hlist",
			"Camera",
			"camera",
			"DarkSkyMM.mm",
			"DarkSkyVis",
			"frame",
			"vtkTimerCallback",
			"addPoints",
			"GetBounds"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			",",
			". Neuroimaging",
			" neuroimaging",
			"neuroimaging",
			"Neuroimaging",
			"hub",
			"Hub",
			"\"district\":",
			"community",
			"\"side\":\"central\",(\"slug\":)(\"rogers_park\"|\"loop\")",
			",\"side\":\"central\",$1",
			"secondary",
			"\"secondary\"",
			"\"neighborhood\"",
			"\"community\"",
			"\"side\"",
			"\n,\"",
			";\\n",
			"\"\"\"\n",
			"\n",
			"\n\n",
			"\n",
			"\n\n",
			"\n",
			"\n\n",
			"",
			"\n",
			"\\n",
			"\n",
			"",
			"\n",
			"\n\n\n",
			"\n",
			"",
			"\n",
			"!Audio\\DING.wav,\"0,0,0\",700",
			"/",
			"",
			"2",
			"",
			".wav",
			"2.wa",
			"	",
			"    ",
			"\\t",
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1319,
						"regions":
						{
						},
						"selection":
						[
							[
								126,
								126
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "DarkSkyPy/PrepProcDMH.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8295,
						"regions":
						{
						},
						"selection":
						[
							[
								8227,
								8227
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2808.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "DarkSkyJs/js/utils/Utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11783,
						"regions":
						{
						},
						"selection":
						[
							[
								76,
								92
							],
							[
								316,
								332
							],
							[
								667,
								683
							],
							[
								1515,
								1531
							],
							[
								1855,
								1871
							],
							[
								2063,
								2079
							],
							[
								2872,
								2888
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1337.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "DarkSkyJs/src/examples/example_drawCalls.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 7710,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1063.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 158.0
	},
	"output.find_results":
	{
		"height": 126.0
	},
	"pinned_build_system": "",
	"project": "DarkSkyVis.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"utils.js",
				"DarkSkyJs/js/utils/Utils.js"
			],
			[
				"pre",
				"DarkSkyPy/PrepProcDMH.py"
			],
			[
				"ex",
				"DarkSkyPy/exampleSDF.py"
			],
			[
				"hli",
				"DarkSkyVis/data/rockstar/hlists/hlist_0.12000.list"
			],
			[
				"hl1.",
				"DarkSkyVis/data/rockstar/hlists/hlist_1.00000.list"
			],
			[
				"ext",
				"DarkSkyPy/extractHaloAndParticles.py"
			],
			[
				"ut",
				"DarkSkyJs/js/Utils.js"
			],
			[
				"step3a",
				"DarkSkyJs/src/Step3a.js"
			],
			[
				"dra",
				"DarkSkyJs/src/example_drawCalls.js"
			],
			[
				"step1",
				"DarkSkyJs/src/Step1.js"
			],
			[
				"step",
				"DarkSkyJs/src/Step3.js"
			],
			[
				"ste",
				"DarkSkyJs/src/Step012.js"
			],
			[
				"utils",
				"DarkSkyJs/js/Utils.js"
			],
			[
				"read",
				"README.md"
			],
			[
				"use",
				"darksky/utils/vtkDarkSkyUtilities.py"
			],
			[
				"utili",
				"darksky/utils/vtkDarkSkyUtilities.py"
			],
			[
				"par",
				"darksky/vtkDarkSkyParticles.py"
			],
			[
				"vtkdark",
				"darksky/vtkDarkSkyFlow.py"
			],
			[
				"darkskyt",
				"darksky/vtkDarkSkyTime.py"
			],
			[
				"",
				"darksky/VTKDarkSkyFlow.py"
			],
			[
				"re",
				"README.md"
			],
			[
				"vtk",
				"darksky/VTKDarkSkyParticles.py"
			],
			[
				"u",
				"darksky/utils/DarkSkyUtilities.py"
			],
			[
				"str",
				"darksky/VTKDarkSky-StreamLines.py"
			],
			[
				"scivis",
				"cs594/SciVis2015/Paper/SciVis.inc"
			],
			[
				"vtkdar",
				"cs594/SciVis2015/src/VTKDarkSkyHalos.py"
			],
			[
				"scivis.inc",
				"cs335/.metadata/.plugins/com.python.pydev.analysis/python_v1_bm109oo8jsa5gnqmc06ekl12p/v1_indexcache/include_server.include_analyzer_5hwz.v1_indexcache"
			],
			[
				"vtkd",
				"cs594/SciVis2015/src/VTKDarkSky.py"
			],
			[
				"star",
				"cs524/StarReport/StarReport.tex"
			],
			[
				"starr",
				"cs524/StarReport/StarReport.inc"
			],
			[
				"project4",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			],
			[
				"ista555",
				"ISTA555/AnalyzeHappiness/Project1.py"
			],
			[
				"topic8",
				"cs594/topic8/MyNetCDF.py"
			],
			[
				"hlist_1",
				"cs594/SciVis2015/data/ds14_scivis_0128/rockstar/hlists/hlist_1.00000.list"
			],
			[
				"hlist_0.65000.list",
				"cs594/SciVis2015/data/ds14_scivis_0128/rockstar/hlists/hlist_0.65000.list"
			],
			[
				"sen",
				"cs524/Journal/TextRendering/src/data/SentiWordNet_3.0.0_20130122.txt"
			],
			[
				"topic",
				"cs594/topic5/Topic5.py"
			],
			[
				"nif",
				"cs594/niiPy/src/NiftiVTK.py"
			],
			[
				"myne",
				"cs594/topic7/MyNetCDF.py"
			],
			[
				"hw10",
				"cs301/HW10/HW10.cpp"
			],
			[
				"cy",
				"cs594/topic5/cylinder.vtk"
			],
			[
				"niipy",
				"cs594/niiPy/niftiRenderer.py"
			],
			[
				"rend",
				"cs594/niiPy/vtk_render.py"
			],
			[
				"hw1.t",
				"ISTA516/HW1/hw1.tex"
			],
			[
				"main.j",
				"cs424/HW3/RightHereRightNow.github.io/javascripts/main.js"
			],
			[
				"basic",
				"cs424/Notes/basic.html"
			],
			[
				"topo",
				"cs424/HW2/bicyclerace.github.io/webapp/js/external-libraries/topojson.v1.min.js"
			],
			[
				"nc",
				"cs594/topic2/NetCDF_dump.txt"
			],
			[
				"syn",
				"cs524/Journal/BookVolRen/src/SynestheticRenderer.py"
			],
			[
				"data/one-grams.txt",
				"ISTA555/YouAreWhatYouEat/data/one-grams.txt"
			],
			[
				"project1",
				"ISTA555/AnalyzeHappiness/Project1.py"
			],
			[
				"useful",
				"ISTA555/YouAreWhatYouEat/src/useful.py"
			],
			[
				"lab1",
				"cs251/Lab13/lab13.txt"
			],
			[
				"overb",
				"cs251/HW1/Prog1Overboard.cpp"
			],
			[
				"dic",
				"cs251/HW5/HW5/dictionary.txt"
			],
			[
				"uber",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/UberMarker.js"
			],
			[
				"yelp",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/YelpMarker.js"
			],
			[
				"cta",
				"cs424/HW3/RightHereRightNow.github.io/APP/framework/markers/CTAMarker.js"
			],
			[
				"databa",
				"cs424/HW3/RightHereRightNow.github.io/APP/data/database.js"
			],
			[
				"sol",
				"cs251/lab10/Solution.cpp"
			],
			[
				"solu",
				"cs251/lab10/Solution.cpp"
			],
			[
				"uiweath",
				"cs424/HW2/bicyclerace.github.io/webapp/js/controllers/ui/UIWeatherViewController.js"
			],
			[
				"uiwea",
				"cs424/HW2/bicyclerace.github.io/webapp/styles/UIWeatherViewController.css"
			],
			[
				"us.",
				"cs424\\Notes\\Choropleth\\us.json"
			],
			[
				"uk",
				"cs424\\HW1\\uk.json"
			],
			[
				"chi",
				"cs424\\HW1\\data\\chicago_health2.json"
			],
			[
				"dataf",
				"cs424\\HW1\\backup\\dataFix.html"
			],
			[
				"chica",
				"cs424\\HW1\\data\\chicago_health.json"
			],
			[
				"chea",
				"cs424\\HW1\\chicago_health.json"
			],
			[
				"chicagogeocrs84",
				"cs424\\HW1\\data\\chicagoGEOcrs84.json"
			],
			[
				"home4",
				"cs533/HW4/HW4/homework4.cpp"
			],
			[
				"homewo5",
				"cs533/HW5/HW5/homework5.cpp"
			],
			[
				"detec",
				"ISTA516/HW5/js/Detector.js"
			],
			[
				"1",
				"ISTA516/HW5/1st.html"
			],
			[
				"sort",
				"cs227/SortTest.java"
			],
			[
				"home",
				"cs533/HW3/homework3.cpp"
			],
			[
				"hw1",
				"cs533/HW1/hw1.cxx"
			],
			[
				"demo",
				"cs533/HW1/paintdemo_mac/demo.cxx"
			],
			[
				"geo",
				"ISTA555/Docs/twitter_code/GeoTag.scala"
			],
			[
				"emo",
				"ISTA555/YouAreWhatYouEat/data/Emoji-FreqDist.txt"
			],
			[
				"emoj",
				"ISTA555/YouAreWhatYouEat/data/etc/emoji-codes.txt"
			],
			[
				"project2",
				"ISTA555/GoodMovieOrBad/docs/project2_key.py"
			],
			[
				"project4.",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			],
			[
				"proj2",
				"ISTA555/GoodMovieOrBad/docs/project2_key.py"
			],
			[
				"project4re",
				"ISTA555/YouAreWhatYouEat/docs/Project 4 Report.txt"
			],
			[
				"proj4",
				"ISTA555/YouAreWhatYouEat/src/Project4.py"
			],
			[
				"perspouse",
				"ISTA555/NSAInterview/docs/project3_data/per_spouse.test"
			],
			[
				"movi",
				"ISTA555/GoodMovieOrBad/src/MovieSentiment.scala"
			],
			[
				"slice",
				"osx/examples/niftiViewer/niftiViewer/Slices.mm"
			],
			[
				"pro",
				"src/Program.cpp"
			],
			[
				"pr",
				"src/Program.cpp"
			],
			[
				"in",
				"osx/Includes.hpp"
			],
			[
				"be",
				"src/Behavior.cpp"
			],
			[
				"co",
				"osx/CocoaGL.mm"
			],
			[
				"ren",
				"osx/RendererOSX.mm"
			],
			[
				"ma",
				"niftiViewer/niftiViewer/Main.mm"
			],
			[
				"prog",
				"src/Program.cpp"
			],
			[
				"progr",
				"src/Program.cpp"
			],
			[
				"mri",
				"Utilities/.Utilities.backup/MRI.py"
			],
			[
				"java",
				"Scripts/Java/JavaBatRecursion/JavaBat_Recursion.java"
			],
			[
				"ass2",
				"CLASS/cs372/ass2.hs"
			],
			[
				"javab",
				"Scripts/Java/JavaBatRecursion/JavaBat_Recursion.java"
			],
			[
				"pig",
				"Scripts/CLOJURE/piglatin.clj"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Dropbox/class-projects/Class.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 219.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
